{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{299:function(a,t,s){a.exports=s.p+\"assets/img/image_1.75619ac2.png\"},326:function(a,t,s){\"use strict\";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h3\",{attrs:{id:\"训练指令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#训练指令\"}},[a._v(\"#\")]),a._v(\" 训练指令\")]),a._v(\" \"),e(\"p\",[a._v(\"train.sh 文件下修改运行train.py的参数，如--nothing,--dataset,--fusion_mode\")]),a._v(\" \"),e(\"p\",[a._v(\"tee：保存命令行的输出结果，结果保存在./trainlog_mosei/mylog.log路径下，-a代表以追加的形式\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train_origin.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--nothing\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--dataset\")]),a._v(\" mosei \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--fusion_mode\")]),a._v(\" inter_intra \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog.log\\n\")])])]),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train_tcp.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog_tcp.log\\n\")])])]),e(\"p\",[a._v(\"消融实验\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train_origin.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--nothing\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--dataset\")]),a._v(\" mosei \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--fusion_mode\")]),a._v(\" inter_intra \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--without_modality\")]),a._v(\" t \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog_wt.log\\n\")])])]),e(\"h3\",{attrs:{id:\"可视化指令\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#可视化指令\"}},[a._v(\"#\")]),a._v(\" 可视化指令\")]),a._v(\" \"),e(\"p\",[e(\"strong\",[a._v(\"visualize.sh\")]),a._v(\"文件下，可视化注意力机制的结果，通过运行\"),e(\"strong\",[a._v(\"visualize.py\")]),a._v(\"文件，可指定参数 \"),e(\"strong\",[a._v(\"--visualize 样本名\")]),a._v(\"，得到对应样本的attention_weight，为一字典类型，包含global（fusion_mode为global时）; inter，intra（fusion_mode为inter_intra时）模型的注意力结果，shape为(layers, bsz, num_heads, q_len, kv_len)\")]),a._v(\" \"),e(\"p\",[a._v(\"总共涉及到2个文件：visualize.py，model_attenvisualize.py\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" visualize.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./visualizelog_mosei/mylog.log\\n\")])])]),e(\"h3\",{attrs:{id:\"对齐操作\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对齐操作\"}},[a._v(\"#\")]),a._v(\" 对齐操作\")]),a._v(\" \"),e(\"ol\",[e(\"li\",[e(\"p\",[a._v(\"首先，使用\"),e(\"strong\",[a._v(\"d\\\\数据集\\\\mosei\\\\raw\\\\audio\\\\full\")]),a._v(\"目录下的whisper_rec.py获取所需要得到time_stamps的音频文件（修改音频路径，存储路径）\")])]),a._v(\" \"),e(\"li\",[e(\"p\",[a._v(\"接着运行服务器上目录为**/autodl-tmp/alpaca-lora/ljh/code/**下的sim2.py文件，获取得到对齐结果，存储在pkl文件中（修改存储路径）\")])]),a._v(\" \"),e(\"li\",[e(\"p\",[a._v(\"接着本地对视频（\"),e(\"strong\",[a._v(\"d\\\\数据集\\\\mosei\\\\load.py\")]),a._v(\"）、音频进行clip（\"),e(\"strong\",[a._v(\"d\\\\数据集\\\\mosei\\\\clip-audio.py\")]),a._v(\"）（修改存储路径）\")])])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"自训练\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自训练\"}},[a._v(\"#\")]),a._v(\" 自训练\")]),a._v(\" \"),e(\"p\",[a._v(\"基于预训练模型，跑一遍推理；输出csv文件，每类选取top_k个样本（confidence），扩充训练集，重新训练模型，冻结regression头，重新训练p次\")]),a._v(\" \"),e(\"p\",[a._v(\"首先进行预训练，通过修改模型参数保存路径，保存到指定路径下\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog.log\\n\")])])]),e(\"p\",[a._v(\"从指定路径下加载模型参数，运行以下指令，会读取/root/autodl-tmp/alpaca-lora/ljh/DPC_KNN/data/ami/ami_audiofilter.csv文件，推理ami数据集，得到伪标签，保存结果在/root/autodl-tmp/alpaca-lora/ljh/code/distill_gate/SFIN_origin/ami_result/ami_pred.csv文件中，运行目录下的analysis.py文件，会得到滤除后的top-10样本的预测，即每个类别选取10个高置信度的样本，最终得到filter_ami_pred.csv文件（以追加的形式），基于该文件重新训练模型，指令的运行顺序如下：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog.log \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 模型参数保存路径指定，每次重新训练路径最好保持不一致\")]),a._v(\"\\npython inf_ami_args.py \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 输入ami_audiofilter.csv，模型参数；输出：ami_pred.csv\")]),a._v(\"\\npython analysis.py \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 输入：ami_pred.csv 追加的形式输出：filter_ami_pred.csv，同时更新ami_auidofilter.csv,即剩余的未推理的ami样本\")]),a._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog.log \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 输入：filter_ami_pred.csv，模型参数保存路径指定，指定为retrain模式\")]),a._v(\"\\npython inf_ami_args.py \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 输入ami_audiofilter.csv，模型参数；输出：ami_pred.csv\")]),a._v(\"\\npython analysis.py \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 输入：ami_pred.csv 追加的形式输出：filter_ami_pred.csv，同时更新ami_auidofilter.csv,即剩余的未推理的ami样本\")]),a._v(\"\\n\")])])]),e(\"p\",[a._v(\"现在retrain的想法是，val head损失由mosei数据集提供，emo head的损失由mosei+ami数据集提供。\")]),a._v(\" \"),e(\"p\",[a._v(\"已封装成相关指令，循环自训练的指令\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-bash extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-bash\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"bash\")]),a._v(\" train.sh \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--nothing\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--dataset\")]),a._v(\" mosei \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--fusion_mode\")]),a._v(\" inter_intra \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"--retrain\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"2\")]),a._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token file-descriptor important\"}},[a._v(\"&1\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"|\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[a._v(\"tee\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[a._v(\"-a\")]),a._v(\" ./trainlog_mosei/mylog.log\\n\")])])]),e(\"p\",[a._v(\"每次重新自训练前，需要更新初始模型，路径在\"),e(\"u\",[e(\"strong\",[a._v(\"model_single/mosei/inter_intramodelf1.pt\")])]),a._v(\"中，需更换为初始模型，路径在\"),e(\"u\",[e(\"strong\",[a._v(\"model_single_originvideo/mosei/inter_intramodelf.pt\")])]),a._v(\"，更换**\"),e(\"u\",[a._v(\"ami_audiofilter.csv\")]),e(\"strong\",[a._v(\"为初始版本，删除\")]),e(\"u\",[a._v(\"ami_result/ami_pred.csv\")]),e(\"strong\",[a._v(\"，\")]),e(\"u\",[a._v(\"ami_result/filter_ami_pred.csv\")]),a._v(\"**\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"画图\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#画图\"}},[a._v(\"#\")]),a._v(\" 画图\")]),a._v(\" \"),e(\"p\",[a._v(\"让坐标轴的label始终对准每一小格的中间，思路：首先得到每一个grid的size，然后获取坐标的起止，让每个刻度都加grid_size/2，终止刻度也要加0.5，传入即可\")]),a._v(\" \"),e(\"div\",{staticClass:\"language-python extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-python\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 获取横坐标轴的范围\")]),a._v(\"\\nx_min\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" x_max \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" plt\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"xlim\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# -0.5 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5 11.5 12.5 13.5\")]),a._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"# 计算一个小格的长度\")]),a._v(\"\\ngrid_size \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"x_max \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"-\")]),a._v(\" x_min\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"/\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[a._v(\"len\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"words\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[a._v(\"#word为每一小格放置的label\")]),a._v(\"\\nticks \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"=\")]),a._v(\" np\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\".\")]),a._v(\"arange\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\"(\")]),a._v(\"x_min \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"+\")]),a._v(\" grid_size\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"/\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" x_max \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"+\")]),a._v(\" grid_size\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[a._v(\"/\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[a._v(\"2\")]),a._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\",\")]),a._v(\" grid_size\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[a._v(\")\")]),a._v(\"\\n\")])])]),e(\"p\",[e(\"img\",{attrs:{src:s(299),alt:\"image-20240325160500471\"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}