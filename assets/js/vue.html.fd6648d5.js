"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[542],{6262:(n,s)=>{s.A=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}},1741:(n,s,e)=>{e.r(s),e.d(s,{comp:()=>N,data:()=>P});var a=e(641);const t=e.p+"assets/img/image-20240330183159891.023c8b47.png",i=e.p+"assets/img/image-20240506202738435.60cd2446.png",p=(0,a.Fv)('<h1 id="基于vuepress搭建个人博客" tabindex="-1"><a class="header-anchor" href="#基于vuepress搭建个人博客"><span><strong>基于vuepress搭建个人博客</strong></span></a></h1><p>本文总结了在window上基于vuepress搭建个人博客的经历及所踩过的坑。。</p><p>最初的设想是先在本地搭建成功之后，再通过github部署，方便个人访问及分享。因此思路主要如下：</p><p>step 1: 通过网络搜索教程，熟悉vuepress相关代码及搭建流程，在个人电脑上进行测试。</p><p>step 2: 在本地部署成功之后，通过个人的github搭建仓库，以sh命令集成指令，自动化提交到分支。</p><p>最终没想到在step 1就耗费了非常多的时间和精力，以下总结相关错误及要点：</p><p><code>要点 1</code>：将exports写成export，导致每次新增区块如侧边栏或者导航栏都得不到想要的效果，耗费过于长的时间</p><p><code>总结 1</code>：代码阅读不够仔细</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>module.exports = <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>要点 2</code>：网上教程是需要通过npm或者yarn安装vuepress，过程中会出现一些bug，如某些库没有安装。</p><p><code>总结 2</code>：仔细阅读bug，定位关键词，通过搜索工具仔细搜寻，得到解决方案。</p>',11),l=(0,a.Lk)("code",null,"要点 3",-1),o={href:"https://www.jb51.net/article/263056.htm",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Fv)('<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>nav<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>text<span class="token operator">:</span>&#39;首页&#39;<span class="token punctuation">,</span>link<span class="token operator">:</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//  / 是读取 docs 文件夹下的 README.md 文件，即 / 结尾的路径将会被视为 */README.md</span>\n        <span class="token punctuation">{</span>text<span class="token operator">:</span>&#39;about&#39;<span class="token punctuation">,</span>link<span class="token operator">:</span><span class="token string">&quot;/about/about&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 仅以 / 开头，不写 .md 后缀，默认读取文件夹下对应的 about.md 文件</span>\n        <span class="token punctuation">{</span>text<span class="token operator">:</span>&#39;Github&#39;<span class="token punctuation">,</span>link<span class="token operator">:</span><span class="token string">&quot;https://github.com/ChosenOne23&quot;</span><span class="token punctuation">}</span><span class="token comment">//  跳转链接</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>总结 3</code>：通过官方文档准确获取信息的能力。</p><p><code>要点 4</code>：将本地搭建好的博客挂载到 github 上的时候，根据网上的构建 deploy.py 教程，一键自动化部署会有相关问题：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/usr/bin/env sh</span>\n<span class="token comment"># myblog/deploy.sh</span>\n<span class="token comment"># 确保脚本抛出遇到的错误</span>\n<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>\n\n<span class="token comment"># 生成静态文件</span>\n<span class="token function">npm</span> run build  <span class="token comment"># 此处与 myblog/package.json 中的信息需保持一致，注意：默认情况下一般是npm run build</span>\n\n<span class="token comment"># 进入生成的文件夹</span>\n<span class="token builtin class-name">cd</span> docs/.vuepress/dist\n\n<span class="token function">git</span> init\n<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>\n<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;deploy&#39;</span>\n\n<span class="token comment"># 发布到 https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;</span>\n<span class="token function">git</span> push <span class="token parameter variable">-f</span> git@github.com:ChosenOne23/myblog.git master:gh-pages <span class="token comment"># 提交到gh-pages分支</span>\n\n<span class="token builtin class-name">cd</span> -\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token comment">// myblog/package.json</span>\n<span class="token punctuation">{</span>\n    ...\n    <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vuepress dev docs --temp .temp&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;set NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vuepress build docs&quot;</span> <span class="token comment">// 部署时需加上set NODE_OPTIONS=--openssl-legacy-provider</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ...\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>要点 5</code>：图片路径设置问题，在 <code>typora</code> 偏好设置中将图片默认的保存路径设置为<code>../assets</code>，并勾选上以下信息，保证每次插入图片在本地都有存储且方便上传时索引准确。如下：</p><img src="'+t+'" alt="image-20240330183159891" style="zoom:67%;"><h3 id="多机部署问题" tabindex="-1"><a class="header-anchor" href="#多机部署问题"><span><strong>多机部署问题</strong></span></a></h3><p>在两台不同的主机上本地更新了博客,如何将更新内容同步至远端,经过一番搜寻给出了答案：</p><p>第一步是将远端代码(<code>master</code>分支)与本地(<code>master</code>分支)合并,第二步是增加或修改博客内容,最后一步是将更新后的内容<code>push</code>到远端的<code>gh-pages</code>,<code>master</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 根据远端仓库更新本地分支的命令：</span>\n<span class="token function">git</span> checkout master\n<span class="token comment"># 1. 首先克隆(仅需做一次)：</span>\n<span class="token function">git</span> clone <span class="token parameter variable">-b</span> 分支名 git@github.com:ChosenOne23/myblog.git\n<span class="token comment"># 2. 更新仓库(远端为 origin)：</span>\n<span class="token function">git</span> pull origin master:master <span class="token comment"># 将远端的 master 分支更新到本地的master分支</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 将网页部署到gh-pages分支</span>\n<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>\n<span class="token comment"># 构建</span>\n<span class="token function">npm</span> run build\n\n<span class="token comment"># 导航到构建输出目录</span>\n<span class="token builtin class-name">cd</span> docs/.vuepress/dist\n\n<span class="token function">git</span> init\n<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>\n<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&#39;deploy&#39;</span>\n\n<span class="token comment"># 推到你仓库的的 gh-page 分支</span>\n<span class="token comment"># 将 &lt;USERNAME&gt;/&lt;REPO&gt; 替换为你的信息</span>\n<span class="token function">git</span> push <span class="token parameter variable">-f</span> git@github.com:ChosenOne23/myblog.git master:gh-pages\n\n<span class="token builtin class-name">cd</span> -\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 根据本地分支更新远端分支:</span>\n<span class="token function">git</span> checkout master <span class="token comment"># b本地切换到master分支</span>\n<span class="token function">git</span> status <span class="token comment"># 查看当前有变更的代码文件</span>\n<span class="token function">git</span> <span class="token function">add</span> ./ <span class="token comment"># 本地所有修改的内容到暂存区</span>\n<span class="token function">git</span> commit <span class="token parameter variable">-m</span> “modify_mypc”  <span class="token comment"># 上传提交信息</span>\n<span class="token function">git</span> pull origin master <span class="token comment"># 将远程最新的代码先跟你本地的代码合并一下</span>\n<span class="token function">git</span> push origin master <span class="token comment"># 将代码推至远程就可以了。这里master可以是其他分支名字</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vue语法" tabindex="-1"><a class="header-anchor" href="#vue语法"><span><strong>vue语法</strong></span></a></h3>',14),r={id:"项目结构",tabindex:"-1"},d={class:"header-anchor",href:"#项目结构"},u={href:"https://theme-hope.vuejs.press/zh/get-started/structure.html",target:"_blank",rel:"noopener noreferrer"},m=(0,a.Fv)('<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>```ts <span class="token punctuation">{</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">}</span>\n├── src → 由你指定的文档文件夹\n│    │\n│    ├── <span class="token punctuation">.</span>vuepress <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> → 用于存放全局的配置、组件、静态资源等\n│    │    │\n│    │    ├── dist <span class="token punctuation">(</span>默认的<span class="token punctuation">)</span> → 构建输出目录\n│    │    │\n│    │    ├── public <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> → 静态资源目录\n│    │    │\n│    │    ├── styles <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> → 用于存放样式相关的文件\n│    │    │\n│    │    ├── config<span class="token punctuation">.</span><span class="token punctuation">{</span>js<span class="token punctuation">,</span>ts<span class="token punctuation">}</span> <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> → <span class="token comment"># 各种配置文件的入口文件，如导航栏、侧边栏、主题等</span>\n│    │    │   ├── theme<span class="token punctuation">.</span>ts <span class="token comment"># 主要是对博客主页右下方的信息进行配置</span>\n│    │    │   ├── navbar<span class="token punctuation">.</span>ts <span class="token comment"># 导航栏配置</span>\n│    │    │   ├── sidebar<span class="token punctuation">.</span>ts <span class="token comment"># 侧边栏配置</span>\n│    │    └── client<span class="token punctuation">.</span><span class="token punctuation">{</span>js<span class="token punctuation">,</span>ts<span class="token punctuation">}</span> <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span> → 客户端文件\n│    │\n│    ├── posts → <span class="token comment"># 存放 md 文件，新增博客时，若需更新到侧边栏则在 sidebar.ts 文件下进行配置。若需在博客首页有时间线、分类的信息，则在 md 文件头添加 tag 信息，且在需要有一级标题的信息才能显示在时间线上 </span>\n│    │\n│    └── README<span class="token punctuation">.</span>md → <span class="token comment"># 博客主页，如主页背景、主页logo的更换</span>\n│\n└── package<span class="token punctuation">.</span>json → Nodejs 配置文件\n```\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="新-blog-的文件头实例" tabindex="-1"><a class="header-anchor" href="#新-blog-的文件头实例"><span>新 blog 的文件头实例：</span></a></h4><div class="language-markdown line-numbers-mode" data-ext="md" data-title="md"><pre class="language-markdown"><code><span class="token front-matter-block"><span class="token punctuation">---</span>\n<span class="token front-matter yaml language-yaml"><span class="token key atrule">icon</span><span class="token punctuation">:</span> pen<span class="token punctuation">-</span>to<span class="token punctuation">-</span>square // 图标\n<span class="token key atrule">date</span><span class="token punctuation">:</span> 2024<span class="token punctuation">-</span>05<span class="token punctuation">-</span>06 // 时间\n<span class="token key atrule">category</span><span class="token punctuation">:</span> <span class="token comment"># 类别 </span>\n  <span class="token punctuation">-</span> 实验\n  <span class="token punctuation">-</span> 训练指令\n<span class="token key atrule">tag</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> 实验</span>\n<span class="token punctuation">---</span></span>\n<span class="token title important"><span class="token punctuation">#</span> 一级标题，文件的主题，帮助时间线的建立</span>\n\t正文，你要填写的东西\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',3),v={id:"路径信息",tabindex:"-1"},k={class:"header-anchor",href:"#路径信息"},b={href:"https://theme-hope.vuejs.press/zh/get-started/content.html#%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%94%9F%E6%88%90",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Fv)('<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>└─ src\n   ├─ demo <span class="token comment"># 示例md文件</span>\n   │  ├─ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n   │  └─ page<span class="token punctuation">.</span>md\n   │  └─ markdown<span class="token punctuation">.</span>md\n   │  └─ README<span class="token punctuation">.</span>md\n   ├─ posts <span class="token comment"># 自己书写的blog的存放路径，文件头与第2部保持一致。</span>\n   └─ README<span class="token punctuation">.</span>md\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Markdown 文件对应的路由路径为:</p><table><thead><tr><th>相对路径</th><th>路由路径</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/demo/README.md</code></td><td><code>/demo/</code></td></tr><tr><td><code>/demo/page.md</code></td><td><code>/demo/page.html</code></td></tr></tbody></table>',3),g={start:"4"},f={id:"博客主页配置",tabindex:"-1"},y={class:"header-anchor",href:"#博客主页配置"},L={href:"https://theme-hope.vuejs.press/zh/config/frontmatter/home.html#heroimagedark",target:"_blank",rel:"noopener noreferrer"},E={class:"hint-container tip"},x=(0,a.Lk)("p",{class:"hint-container-title"},"提示",-1),q=(0,a.Lk)("p",null,[(0,a.eW)("对应于项目结构下的"),(0,a.Lk)("code",null,"src-README.md"),(0,a.eW)("文件")],-1),j={href:"https://theme-hope.vuejs.press/zh/guide/markdown/stylize/hint.html",target:"_blank",rel:"noopener noreferrer"},w=(0,a.Lk)("h5",{id:"博客主页的背景",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#博客主页的背景"},[(0,a.Lk)("span",null,"博客主页的背景")])],-1),_={href:"https://bing.img.run/api.html",target:"_blank",rel:"noopener noreferrer"},A=(0,a.Lk)("code",null,"api",-1),W=(0,a.Lk)("h5",{id:"icon-图标设置",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#icon-图标设置"},[(0,a.Lk)("span",null,"icon 图标设置")])],-1),D={href:"https://fontawesome.com/search?q=blog&o=r&m=free",target:"_blank",rel:"noopener noreferrer"},O=(0,a.Lk)("code",null,"icon",-1),R=(0,a.Lk)("img",{src:i,alt:"image-20240506202738435",style:{zoom:"50%"}},null,-1),F={href:"https://icon-sets.iconify.design/?keyword=ca",target:"_blank",rel:"noopener noreferrer"},M=(0,a.Lk)("h5",{id:"markdown-enhance-配置",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#markdown-enhance-配置"},[(0,a.Lk)("span",null,"markdown enhance 配置")])],-1),z=(0,a.Lk)("code",null,".vuepress/config.ts",-1),T={href:"https://plugin-md-enhance.vuejs.press/zh/guide/grammar/tex.html#%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"},C={},N=(0,e(6262).A)(C,[["render",function(n,s){const e=(0,a.g2)("ExternalLinkIcon");return(0,a.uX)(),(0,a.CE)("div",null,[p,(0,a.Lk)("p",null,[l,(0,a.eW)("：路径设置的问题，包括"),(0,a.Lk)("a",o,[(0,a.eW)("部署到github需要注意的事项"),(0,a.bF)(e)]),(0,a.eW)("，以及本地搭建是需要对vuepress的路径设置有一定的理解。后者需要阅读 vuepress 官方文档进行准确设置，vuepress 默认会读取该目录下的 README.md 文档，因此每次新建一个文件夹，都需要在该目录下新建一个 README.md：")]),c,(0,a.Lk)("h4",r,[(0,a.Lk)("a",d,[(0,a.Lk)("span",null,[(0,a.Lk)("a",u,[(0,a.eW)("项目结构"),(0,a.bF)(e)])])])]),m,(0,a.Lk)("h4",v,[(0,a.Lk)("a",k,[(0,a.Lk)("span",null,[(0,a.Lk)("a",b,[(0,a.eW)("路径信息"),(0,a.bF)(e)])])])]),h,(0,a.Lk)("ol",g,[(0,a.Lk)("li",null,[(0,a.Lk)("h4",f,[(0,a.Lk)("a",y,[(0,a.Lk)("span",null,[(0,a.Lk)("a",L,[(0,a.eW)("博客主页配置"),(0,a.bF)(e)])])])])])]),(0,a.Lk)("div",E,[x,q,(0,a.Lk)("p",null,[(0,a.Lk)("a",j,[(0,a.eW)("这是一个提示容器"),(0,a.bF)(e)])])]),w,(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[(0,a.eW)("通过"),(0,a.Lk)("a",_,[(0,a.eW)("必应壁纸"),A,(0,a.bF)(e)]),(0,a.eW)("获取")])]),W,(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[(0,a.Lk)("a",D,[(0,a.eW)("fontawesome"),(0,a.bF)(e)]),(0,a.eW)("，搜索得到所想要的"),O,(0,a.eW)("，之后获取对应的名称，填入参数即可。")])]),R,(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[(0,a.Lk)("a",F,[(0,a.eW)("iconify"),(0,a.bF)(e)])])]),M,(0,a.Lk)("ul",null,[(0,a.Lk)("li",null,[(0,a.eW)("配置"),z,(0,a.eW)("文件："),(0,a.Lk)("a",T,[(0,a.eW)("markdown enhance"),(0,a.bF)(e)])])])])}]]),P=JSON.parse('{"path":"/posts/tec/vue.html","title":"基于vuepress搭建个人博客","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-04-13T00:00:00.000Z","category":["tec","vue"],"tag":["tec"],"description":"基于vuepress搭建个人博客 本文总结了在window上基于vuepress搭建个人博客的经历及所踩过的坑。。 最初的设想是先在本地搭建成功之后，再通过github部署，方便个人访问及分享。因此思路主要如下： step 1: 通过网络搜索教程，熟悉vuepress相关代码及搭建流程，在个人电脑上进行测试。 step 2: 在本地部署成功之后，通过个...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myblog/posts/tec/vue.html"}],["meta",{"property":"og:site_name","content":"Ljh\'s Blog"}],["meta",{"property":"og:title","content":"基于vuepress搭建个人博客"}],["meta",{"property":"og:description","content":"基于vuepress搭建个人博客 本文总结了在window上基于vuepress搭建个人博客的经历及所踩过的坑。。 最初的设想是先在本地搭建成功之后，再通过github部署，方便个人访问及分享。因此思路主要如下： step 1: 通过网络搜索教程，熟悉vuepress相关代码及搭建流程，在个人电脑上进行测试。 step 2: 在本地部署成功之后，通过个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T07:54:44.000Z"}],["meta",{"property":"article:author","content":"Jinhao Lin"}],["meta",{"property":"article:tag","content":"tec"}],["meta",{"property":"article:published_time","content":"2024-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-06T07:54:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基于vuepress搭建个人博客\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-06T07:54:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jinhao Lin\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"多机部署问题","slug":"多机部署问题","link":"#多机部署问题","children":[]},{"level":3,"title":"vue语法","slug":"vue语法","link":"#vue语法","children":[]}],"git":{"createdTime":1714982084000,"updatedTime":1714982084000,"contributors":[{"name":"ChosenOne23","email":"652994621@qq.com","commits":1}]},"readingTime":{"minutes":5.45,"words":1634},"filePathRelative":"posts/tec/vue.md","localizedDate":"2024年4月13日","excerpt":"\\n<p>本文总结了在window上基于vuepress搭建个人博客的经历及所踩过的坑。。</p>\\n<p>最初的设想是先在本地搭建成功之后，再通过github部署，方便个人访问及分享。因此思路主要如下：</p>\\n<p>step 1: 通过网络搜索教程，熟悉vuepress相关代码及搭建流程，在个人电脑上进行测试。</p>\\n<p>step 2: 在本地部署成功之后，通过个人的github搭建仓库，以sh命令集成指令，自动化提交到分支。</p>\\n<p>最终没想到在step 1就耗费了非常多的时间和精力，以下总结相关错误及要点：</p>\\n<p><code>要点 1</code>：将exports写成export，导致每次新增区块如侧边栏或者导航栏都得不到想要的效果，耗费过于长的时间</p>","autoDesc":true}')}}]);